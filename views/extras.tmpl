{{define "html-head"}}
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="dcrdata web">
    <meta name="author" content="dcrdata">
    <!--  Custom favicon  -->
    <link rel="apple-touch-icon" sizes="180x180" href="/images/favicon/apple-touch-icon.png">
    <link rel="icon" href="/images/favicon/favicon.ico">
    <link rel="icon" type="image/png" href="/images/favicon/favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="/images/favicon/favicon-16x16.png" sizes="16x16">
    <link rel="manifest" href="/images/favicon/manifest.json">
    <link rel="mask-icon" href="/images/favicon/safari-pinned-tab.svg">
    <link rel="shortcut icon" href="/images/favicon/favicon.ico">
    <meta name="apple-mobile-web-app-title" content="deCRED - decentralized credit">
    <meta name="application-name" content="deCRED - decentralized credit">
    <meta name="msapplication-TileColor" content="#2973ff">
    <meta name="msapplication-TileImage" content="/images/favicon/mstile-144x144.png">
    <meta name="msapplication-config" content="/images/favicon/browserconfig.xml">
    <meta name="turbolinks-cache-control" content="no-cache">
    <title>{{.}}</title>
    <link href="/css/bootstrap.css" rel="stylesheet">
    <link href="/css/main.css" rel="stylesheet">
    <!-- <link rel="stylesheet/less" type="text/css" href="/css/dynamic.less"> -->
    <script src="/js/messagesocket.js"></script>
    <script src="/js/humanize.js"></script>
    <script src="/js/turbolinks.js"></script>
    <script src="/js/jquery.js"></script>
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
{{end}}

{{define "navbar"}}
<div class="top-nav">
    <div class="container">
        <div class="d-flex align-items-center flex-wrap">
            <div class="d-flex align-items-center">
                <div class="col-sm-auto" style="padding: 0 2px">
                    <a href="/" class="dcricon-decred no-underline"></a>
                </div>
                <div class="col-sm-auto"><a href="/explorer" title="Explorer">Explore</a></div>
            </div>
            <div class="col" style="padding: 0 5px;">
                <form class="navbar-form" role="search" id="search-form">
                    <div class="input-group">

                        <input
                            autofocus
                            type="text"
                            name="search"
                            id="search"
                            class="form-control top-search"
                            placeholder="Search for blocks, addresses or transactions"
                        />
                    </div>
                </form>
            </div>
            <div>
                <a id="sun-toggle" href="javascript:toggleSun()" class="dcricon-sun-fill no-underline"></a>
            </div>
        </div>
    </div>
</div>
<script data-turbolinks-eval="false">
    function setCookie(cname, cvalue, exMins) {
        var d = new Date();
        d.setTime(d.getTime() + (exMins*60*1000));
        var expires = "expires="+d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }
    var sunToggle = document.getElementById("sun-toggle")
    var darkBGCookieName = 'dcrdataDarkBG';
    function darkEnabled() {
        return document.cookie.includes(darkBGCookieName)
    }
    if (darkEnabled()) {
        toggleToDarkClasses(document.body)
    } else {
        toggleToLightClasses(document.body)
    }
    function toggleToDarkClasses(body) {
        $(sunToggle).removeClass('dcricon-sun-fill')
        $(sunToggle).addClass('dcricon-sun-stroke')
        $(body).addClass('darkBG')
    }
    function toggleToLightClasses(body) {
        $(body).removeClass('darkBG');
        $(sunToggle).removeClass('dcricon-sun-stroke')
        $(sunToggle).addClass('dcricon-sun-fill')
    }
    function toggleSun() {
        if (darkEnabled()) {
            setCookie(darkBGCookieName, '', 0)
            toggleToLightClasses(document.body)
        } else {
            setCookie(darkBGCookieName, 1, 525600)
            toggleToDarkClasses(document.body)
        }
    }
    document.addEventListener("turbolinks:before-render", function(event) {
        if (darkEnabled()) {
            toggleToDarkClasses(event.data.newBody)
        } else {
            toggleToLightClasses(event.data.newBody)
        }
    })


    function updateConnectionStatus(msg, connected) {
        var el = $('#connection');
        el.removeClass('hidden')
        if (connected) {
            el.addClass('connected')
            el.removeClass('disconnected')
        } else {
            el.removeClass('connected');
            el.addClass('disconnected');
        }
        el.html(msg + '<div></div>')
    }



    function getSocketURI(loc) {
        var protocol = (loc.protocol === 'https:') ? 'wss' : 'ws'
        var route = (loc.pathname === "/") ? "/ws" : loc.pathname + '/ws'
        return protocol + "://" + loc.host + route
    }

    var ws; // websocket global
    function createWebSocket(loc) {
        var uri = getSocketURI(loc)
        ws = new MessageSocket(uri);
        console.log("createdWebSocket", uri, ws)
        ws.registerEvtHandler("open", function() {
            console.log('Connected')
            updateConnectionStatus('Connected', true);
        });

        ws.registerEvtHandler("close", function() {
            console.log('Disconnected')
            updateConnectionStatus('Disconnected', false);
        });

        ws.registerEvtHandler("error", function(evt) {
            console.log("WebSocket error:", evt);
            updateConnectionStatus('Disconnected', false);
        });

        ws.registerEvtHandler("ping", function(evt) {
            console.log("ping. users online: ", evt)
            //ws.send("pong", "copy")
        });
        ws.registerEvtHandler("decodetxResp", function(evt) {
            console.log("Got message: ", evt);
            $("#decode_header").text("Decoded tx");
            $("#decoded_tx").text(evt);
        })
        ws.registerEvtHandler("sendtxResp", function(evt) {
            console.log("Got message: ", evt);
            $("#decode_header").text("Sent tx");
            $("#decoded_tx").text(evt);
        })
        ws.registerEvtHandler("searchResp", function(evt) {
            console.log("Got message: ", evt);
            if (evt !== "") {
                window.location.href = evt;
            }
        })
        var updateBlockData = function (event) {
            console.log("Received newblock message", event);
            var newBlock = JSON.parse(event);
            var confirms = $('[data-confirmation-block-height]');
            $.each(confirms, function(i, v) {
                if (isNaN($(v).text())) {
                    $(v).text("0");
                }
                $(v).text(
                    newBlock.block.height - $(v).data('confirmation-block-height')
                )
            })
            // block summary data
            var b = newBlock.block;
            var expTableRows = $('#explorertable tbody tr');
            //var CurrentHeight = parseInt($('#explorertable tbody tr td').first().text());
            if (expTableRows){
                expTableRows.last().remove()
                var newRow = '<tr id="' + b.height + '">' +
                    '<td><a href="/explorer/block/' + b.height + '" class="fs18">' + b.height + '</a></td>' +
                    '<td>' + b.tx + '</td>' +
                    '<td>' + b.votes + '</td>' +
                    '<td>' + b.tickets + '</td>' +
                    '<td>' + b.revocations + '</td>' +
                    '<td>' + humanize.bytes(b.size) + '</td>' +
                    '<td data-age=' + b.time + '>' + humanize.timeSince(b.time) + '</td>' +
                    '<td>' + b.formatted_time + '</td>' +
                '</tr>'
                var newRowHtml = $.parseHTML(newRow)
                $(newRowHtml).insertBefore(expTableRows.first())
                setTimeElements()
            }
            if ($("#bsubsidy_total").text() !== "") {
                $("#bsubsidy_total").html(humanize.decimalParts(b.next_block_subsidy.total/100000000, false, 8))
                $("#bsubsidy_pow").html(humanize.decimalParts(b.next_block_subsidy.pow/100000000, false, 8))
                $("#bsubsidy_pos").html(humanize.decimalParts((b.next_block_subsidy.pos/500000000), false, 8))
                $("#bsubsidy_dev").html(humanize.decimalParts(b.next_block_subsidy.developer/100000000, false, 8))
                $("#coin_supply").html(humanize.decimalParts(b.coin_supply/100000000, true, 8))
                $("#blocksdiff").html(humanize.decimalParts(b.sdiff, false, 8))
                $("#window_block_index").text(newBlock.stake.window_block_index)
                $("#pos-window-progess-bar").css({ width: (newBlock.stake.window_block_index/144)*100 + "%" })
            }
        };
        ws.registerEvtHandler("newblock", updateBlockData);

        var updateMempool = function (event) {
            console.log("Received mempoolsstxfeeinfo message", event);
            var m = JSON.parse(event);

            //mempool fee info
            $('#mempoolfeeinfo_number').text(m.number)
        };
        ws.registerEvtHandler("mempoolsstxfeeinfo", updateMempool);
    }
    document.getElementById('search').onkeypress = function(e){
        if (!e) e = window.event;
        var keyCode = e.keyCode || e.which;
        if (keyCode == '13'){
            ws.send("search",this.value)
            return false;
        }
    }
    function manageWebSocket(loc) {
        var pathRoot = loc.pathname.split('/')[1];
        var socketPathRoot = ws.ws.url.split(loc.host)[1].split("/")[1]
        if (pathRoot == socketPathRoot) {
            return
        }
        // reconnect to correct socket url
        console.log("roots mismatch, reconnecting", pathRoot, socketPathRoot)
        ws.close()
        createWebSocket(loc)
    }
</script>

<script>
    if (!ws) {
        createWebSocket(window.location)
    } else {
        manageWebSocket(window.location)
    }
</script>
{{end}}

{{define "footer"}}
<footer class="navbar-fixed-bottom">
    <div class="container wrapper text-center">
        <a class="nav-item" href="https://github.com/dcrdata/dcrdata" title="dcrdata on GitHub" target="_blank">GitHub</a>
        <a class="nav-item" href="https://github.com/dcrdata/dcrdata#json-rest-api" title="API Endpoints" target="_blank">API</a>
        <a class="nav-item" href="/explorer/decodetx" title="Decode or send a raw transaction">Decode Tx</a>
        <a class="nav-item" href="/api/status" title="API Status" target="_blank" data-turbolinks="false">Status</a>
        <span data-turbolinks-permanent class="nav-item hidden" id="connection">Connecting to WebSocket...<div></div></span>
    </div>
</footer>
<script data-turbolinks-eval="false">
    var ages, hiddenAges;
    function setTimeElements() {
        ages = $('[data-age]');
    }
    function updateAges() {
        $.each(ages, function(i, age) {
            var unixTime = $(age).data('age');
            if (unixTime > 0) {
                $(age).text(
                    humanize.timeSince(unixTime)
                )
            }
        })
    }
    document.addEventListener("turbolinks:load", function(){
        setTimeElements()
        updateAges()
    })
    setInterval(updateAges, 10000);
</script>
<script>
    $('.scriptDataStar').on('click',function(){
        $(this).next('.scriptData').slideToggle();
    });
</script>
{{end}}

{{define "decimalParts"}}<span class="int">{{ index . 0 }}</span><span class="dot">.</span><span class="decimal">{{ index . 1 }}<span class="trailing-zeroes">{{ index . 2 }}</span></span>{{end}}
