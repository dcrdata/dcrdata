{{define "home"}}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="dcrdata web">
    <meta name="author" content="dcrdata">
    <!--  Custom favicon  -->
    <!--  <link rel="apple-touch-icon" sizes="180x180" href="images/favicon/apple-touch-icon.png">
  <link rel="icon" type="image/png" href="images/favicon/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="images/favicon/favicon-16x16.png" sizes="16x16">
  <link rel="manifest" href="images/favicon/manifest.json">
  <link rel="mask-icon" href="images/favicon/safari-pinned-tab.svg">
  <link rel="shortcut icon" href="images/favicon/favicon.ico">
  <meta name="apple-mobile-web-app-title" content="deCRED - decentralized credit">
  <meta name="application-name" content="deCRED - decentralized credit">
  <meta name="msapplication-TileColor" content="#2973ff">
  <meta name="msapplication-TileImage" content="images/favicon/mstile-144x144.png">
  <meta name="msapplication-config" content="images/favicon/browserconfig.xml"> -->
    <link rel="icon" href="favicon.ico">
    <title>dcrdata web</title>
    <link href="css/main.css" rel="stylesheet">
    <link rel="stylesheet/less" type="text/css" href="css/dynamic.less">
    <script src="js/Chart.min.js"></script>
    <script src="js/messagesocket.js"></script>
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <style>
    .wrapper {
        width: 60%;
        min-width: 360px;
    }
    .navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .open > a:hover, .navbar-default .navbar-nav > .open > a:focus {
        background: black;
    }
        /* Notice: Portions of the connection indicator style come from html5rocks.com */
        @-webkit-keyframes glowGreen {
            from {
                -webkit-box-shadow: rgba(0, 255, 0, 0) 0 0 0;
            }
            50% {
                -webkit-box-shadow: rgba(0, 255, 0, 1) 0 0 10px;
            }
            to {
                -webkit-box-shadow: rgba(0, 255, 0, 0) 0 0 0;
            }
        }
        @-webkit-keyframes glowRed {
            from {
                -webkit-box-shadow: rgba(255, 0, 0, 0) 0 0 0;
            }
            50% {
                -webkit-box-shadow: rgba(255, 0, 0, 1) 0 0 10px;
            }
            to {
                -webkit-box-shadow: rgba(255, 0, 0, 0) 0 0 0;
            }
        }
        #connection {
            font: 14px sans-serif;
            font-weight: bold;
            vertical-align: middle;
            color: silver;
        }
        #connection div {
            background-color: orange;
            width: 10px;
            height: 10px;
            display: inline-block;
            border-radius: 10px;
            margin-left: 5px;
            -webkit-animation-duration: 2s;
            -webkit-animation-iteration-count: infinite;
            -webkit-animation-timing-function: linear;
        }
        #connection.connected div {
            background-color: green;
            -webkit-box-shadow: rgba(0, 255, 0, 0.5) 0px 0px 5px;
            -webkit-animation-name: glowGreen;
        }
        #connection.disconnected div {
            background-color: red;
            -webkit-box-shadow: rgba(255, 0, 0, 0.5) 0px 0px 5px;
            -webkit-animation-name: glowRed;
        }
    </style>
</head>

<body>
    <script type="text/javascript">
        if (!window.DOMTokenList) {
            Element.prototype.containsClass = function(name) {
                return new RegExp("(?:^|\\s+)" + name + "(?:\\s+|$)").test(this.className);
            };
            Element.prototype.addClass = function(name) {
                if (!this.containsClass(name)) {
                var c = this.className;
                this.className = c ? [c, name].join(' ') : name;
                }
            };
            Element.prototype.removeClass = function(name) {
                if (this.containsClass(name)) {
                var c = this.className;
                this.className = c.replace(
                    new RegExp("(?:^|\\s+)" + name + "(?:\\s+|$)", "g"), "");
                }
            };
        }
	
	    var loc = window.location;
        var uri = 'ws:';
        if (loc.protocol === 'https:') {
            uri = 'wss:';
        }
        uri += '//' + loc.host;
        uri += loc.pathname + 'ws';

        var ws = new MessageSocket(uri);

        ws.registerEvtHandler("open", function() {
            console.log('Connected')
            updateConnectionStatus('Connected', true);
        });

        ws.registerEvtHandler("close", function() {
            console.log('Disconnected')
            updateConnectionStatus('Disconnected', false);
        });

        ws.registerEvtHandler("error", function(evt) {
            console.log("WebSocket error:", evt);
            updateConnectionStatus('Disconnected', false);
        });

        ws.registerEvtHandler("ping", function(evt) {
            console.debug("ping. users online: ", evt)
            ws.send("pong", "copy")
        });

        var updateMempool = function (event) {
            console.log("Received mempoolsstxfeeinfo message", event);
            var m = JSON.parse(event);
	    
            // mempool fee info
            var number = document.getElementById('mempoolfeeinfo_number');
            number.innerHTML = String(m.number);

            var min = document.getElementById('mempoolfeeinfo_min');
            min.innerHTML = m.min.toFixed(8);

            var max = document.getElementById('mempoolfeeinfo_max');
            max.innerHTML = m.max.toFixed(8);

            var median = document.getElementById('mempoolfeeinfo_median');
            median.innerHTML = m.median.toFixed(8);

            var mean = document.getElementById('mempoolfeeinfo_mean');
            mean.innerHTML = m.mean.toFixed(8);

            var lm = document.getElementById('mempoolfeeinfo_lowestmineable');
            lm.innerHTML = m.lowest_mineable.toFixed(8);
        };

        ws.registerEvtHandler("mempoolsstxfeeinfo", updateMempool);

        var updateBlockData = function (event) {
            console.log("Received newblock message", event);
            var newblock = JSON.parse(event);

            // block summary data
            var b = newblock.block;

            var height = document.getElementById('blockheight');
            height.innerHTML = String(b.height);

            var hash = document.getElementById('blockhash');
            hash.innerHTML = b.hash;

            var blockhash = document.getElementById('blocksize');
            blockhash.innerHTML = String(b.size);

            var diff = document.getElementById('blockdiff');
            diff.innerHTML = b.diff.toFixed(2);

            var sdiff = document.getElementById('blocksdiff');
            sdiff.innerHTML = b.sdiff.toFixed(4);
	    
	        var poolsize = document.getElementById('poolsize');
            poolsize.innerHTML = String(b.ticket_pool.size);

            var poolvalue = document.getElementById('poolvalue');
            poolvalue.innerHTML = b.ticket_pool.value.toFixed(2);

            var poolvalavg = document.getElementById('poolvalavg');
            poolvalavg.innerHTML = b.ticket_pool.valavg.toFixed(4);

            // stake
            var s = newblock.stake;

            // var sdiffcurrent = document.getElementById('blocksdiff');
            // sdiffcurrent.innerHTML = String(s.stakediff.current);
            // var sdiffnext = document.getElementById('blocksdiffnext');
            // sdiffnext.innerHTML = String(s.next);

            var sdiffEstimates = s.stakediff.estimates;
            var sdiffmin = document.getElementById('sdiffmin');
            sdiffmin.innerHTML = sdiffEstimates.min.toFixed(2);
            var sdiffmax = document.getElementById('sdiffmax');
            sdiffmax.innerHTML = sdiffEstimates.max.toFixed(2);
            var sdiffexp = document.getElementById('sdiffexp');
            sdiffexp.innerHTML = sdiffEstimates.expected.toFixed(2);

            var window_block_index = document.getElementById('window_block_index');
            window_block_index.innerHTML = String(s.window_block_index);

            var feeinfo = s.feeinfo;
            var feeinfonumber = document.getElementById('feeinfo_number');
            feeinfonumber.innerHTML = String(feeinfo.number);
            var feeinfomin = document.getElementById('feeinfo_min');
            feeinfomin.innerHTML = feeinfo.min.toFixed(8);
            var feeinfomax = document.getElementById('feeinfo_max');
            feeinfomax.innerHTML = feeinfo.max.toFixed(8);
            var feeinfomedian = document.getElementById('feeinfo_median');
            feeinfomedian.innerHTML = feeinfo.median.toFixed(8);
            var feeinfomean = document.getElementById('feeinfo_mean');
            feeinfomean.innerHTML = feeinfo.mean.toFixed(8);
        };

        ws.registerEvtHandler("newblock", updateBlockData);

        setInterval(function () {
            ws.send("ping", 'Hi. I am a client!');
        }, 1000);
	
	    function updateConnectionStatus(msg, connected) {
            var el = document.querySelector('#connection');
            if (connected) {
                if (el.classList) {
                    el.classList.add('connected');
                    el.classList.remove('disconnected');
                } else {
                    el.addClass('connected');
                    el.removeClass('disconnected');
                }
            } else {
                if (el.classList) {
                    el.classList.remove('connected');
                    el.classList.add('disconnected');
                } else {
                    el.removeClass('connected');
                    el.addClass('disconnected');
                }
            }
            el.innerHTML = msg + '<div></div>';
        }

        // function closeConnection() {
        //     ws.close();
        //     updateConnectionStatus('Disconnected', false);
        // }
    </script>

    <!-- Fixed navbar -->
    <nav class="navbar navbar-default navbar-fixed-top">
        <div class="container wrapper">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="#">
                    <svg class="svg-logo">
                        <use xlink:href="images/sprites.svg#svg-decred-logo" />
                    </svg>
                </a>
            </div>
            <div id="navbar" class="navbar-collapse collapse">
                <ul class="nav navbar-nav navbar-right">
                    <li><a href="https://github.com/dcrdata/dcrdata" title="dcrdata on GitHub" target="_blank">GitHub</a></li>
                    <li><a href="https://github.com/dcrdata/dcrdata#json-rest-api" ="API Endpoints" target="_blank">API</a></li>
                    <li><a href="/api/status" title="API Status" target="_blank">API Status</a></li>
                    <li><a href="/explorer" title="Explorer" target="_blank">Explore</a></li>
                </ul>
            </div>
            <!--/.nav-collapse -->
        </div>
    </nav>

    <div class="wrapper" style="margin-top:60px;">
        <!-- <p style="padding-top: 10px;"></p> -->
        <div id="pricebox" style="margin: 0 auto;">
            <div style="clear:both;padding-top: 10px; text-align: right;">&nbsp;</div>
            <h4><span>Ticket Price</span></h4>
            <div class="col-md-7" style="margin: 0 auto;">
                <strong>Current Price Window</strong>
                <p class="bg-info" style="background-color:#2971FF;padding:15px;">
                    Ticket Price: <span style="float: right; color:#61DF13;" id="blocksdiff" ><strong>{{printf "%12.4f" .BlockSummary.StakeDiff}}</strong></span><br>
                    Progress: <span style="float: right;">block <span id="window_block_index" >{{.StakeSummary.IdxBlockInWindow}}</span> of 144</span><br>
                </p>
            </div>
            <div class="col-md-6" style="margin: 0 auto;">
                <strong>Next Price Window</strong>
                <p class="bg-info" style="background-color:#2971FF;padding:15px;">
                    Min: <span style="float: right;" id="sdiffmin" >{{printf "%12.2f" .StakeSummary.StakeDiff.Estimates.Min}}</span><br>
                    Max: <span style="float: right;" id="sdiffmax" >{{printf "%12.2f" .StakeSummary.StakeDiff.Estimates.Max}}</span><br>
                    Guess: <span style="float: right;" id="sdiffexp" >{{printf "%12.2f" .StakeSummary.StakeDiff.Estimates.Expected}}</span><br>
                </p>
            </div>
        </div>

        <div id="feebox" style="margin: 0 auto;">
            <div style="clear:both;">&nbsp;</div>
            <h4><span>Ticket Fees</span></h4>
            <div class="col-md-7">
                <strong>Mempool (queued for mining)</strong>
                <p class="bg-info" style="background-color:#2971FF;padding:15px;">
                    Number of Tickets: <span style="float: right;" id="mempoolfeeinfo_number" >{{.MempoolFeeInfo.Number}}</span><br>
                    Lowest Mineable Fee: <span style="float: right;" id="mempoolfeeinfo_lowestmineable" >{{printf "%.8f" .MempoolFeeInfo.LowestMineable}}</span><br>
                    Min Fee: <span style="float: right;" id="mempoolfeeinfo_min" >{{printf "%.8f" .MempoolFeeInfo.Min}}</span><br>
                    Max Fee: <span style="float: right;" id="mempoolfeeinfo_max" >{{printf "%.8f" .MempoolFeeInfo.Max}}</span><br>
                    Median Fee: <span style="float: right;" id="mempoolfeeinfo_median" >{{printf "%.8f" .MempoolFeeInfo.Median}}</span><br>
                    Mean Fee: <span style="float: right;" id="mempoolfeeinfo_mean" >{{printf "%.8f" .MempoolFeeInfo.Mean}}</span><br>
                </p>
            </div>
            <div class="col-md-6 text-left">
                <strong>Mined in Last Block</strong>
                <p class="bg-info" style="background-color:#2971FF;padding:15px;">
                    Number of Tickets: <span style="float: right;" id="feeinfo_number" >{{.StakeSummary.Feeinfo.Number}}</span><br>
                    Min Fee: <span style="float: right;" id="feeinfo_min" >{{printf "%16.6f" .StakeSummary.Feeinfo.Min}}</span><br>
                    Max Fee: <span style="float: right;" id="feeinfo_max" >{{printf "%16.6f" .StakeSummary.Feeinfo.Max}}</span><br>
                    Median Fee: <span style="float: right;" id="feeinfo_median" >{{printf "%16.6f" .StakeSummary.Feeinfo.Median}}</span><br>
                    Mean Fee: <span style="float: right;" id="feeinfo_mean" >{{printf "%16.6f" .StakeSummary.Feeinfo.Mean}}</span><br>
                </p>
            </div>
        </div>

        <div id="chainbox">
            <div style="clear:both;">&nbsp;</div>
            <h4><span>Chain State</span></h4>
            <div class="col-md-8">
                <strong>Best Block</strong>
                <table class="table table-condensed">
                <tbody>
                <tr><td>Height</td><td><strong><span id="blockheight" style="color:#41BF53">{{.BlockSummary.Height}}</span></strong></td></tr>
                <tr><td>Hash</td><td><strong><span id="blockhash" class="inco" style="max-width: 200px; display: block; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;font-size:12px;">
                        {{.BlockSummary.Hash}}</span></strong></td></tr>
                <tr><td>Size (bytes)</td><td><strong><p id="blocksize" >{{.BlockSummary.Size}}</p></strong></td></tr>
                <tr><td>Difficulty</td><td><strong><p id="blockdiff" >{{printf "%16.2f" .BlockSummary.Difficulty}}</p></strong></td></tr>
                </tbody>
                </table>
            </div>
            <div class="col-md-6 text-left">
                <strong>Ticket Pool</strong>
                <table class="table table-condensed">
                <tbody>
                <tr><td>Size</td><td><strong><span id="poolsize" style="color:#41BF53">{{.BlockSummary.PoolInfo.Size}}</span></strong></td></tr>
                <tr><td>Value (DCR)</td><td><strong><span id="poolvalue">{{printf "%16.2f" .BlockSummary.PoolInfo.Value}}</span></strong></td></tr>
                <tr><td>Average (DCR/ticket)</td><td><strong><span id="poolvalavg">{{printf "%16.4f" .BlockSummary.PoolInfo.ValAvg}}</span></strong></td></tr>
                </tbody>
                </table>
            </div>
        </div>

        <br /><br /><br /><br /><br />&nbsp;
    </div>
    <!-- end wrapper -->

    <footer class="navbar-fixed-bottom">
      <div class="container wrapper text-center">
        <strong>dcrdata</strong>.org &emsp; | &emsp;  <span id="connection">Connecting to WebSocket...<div></div></span>
      </div>
    </footer>

    <script src="js/complete.js"></script>

</body>

</html>
{{end}}